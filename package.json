{
  "name": "hodl-stream",
  "version": "0.1.0",
  "main": "index.js",
  "private": true,
  "homepage": "https://hodlstream.com",
  "dependencies": {
    "@date-io/moment": "^1.3.9",
    "@material-ui/core": "^4.3.2",
    "@material-ui/icons": "^4.2.1",
    "@material-ui/pickers": "^3.2.2",
    "apollo-client-preset": "^1.0.4",
    "body-parser": "^1.18.2",
    "classnames": "^2.2.6",
    "compression": "^1.7.3",
    "express": "^4.16.2",
    "force-secure-express": "^1.0.0",
    "graphiql": "^0.11.10",
    "graphql": "0.13.0",
    "graphql-tag": "^2.5.0",
    "highcharts": "^6.0.3",
    "ignore-styles": "^5.0.1",
    "isomorphic-fetch": "^2.2.1",
    "jest-cli": "^22.0.3",
    "jss": "^9.4.0",
    "jss-preset-default": "^4.0.1",
    "lodash": "^4.17.13",
    "moment": "^2.19.3",
    "morgan": "^1.9.0",
    "raw-loader": "^0.5.1",
    "react": "^16.9.0",
    "react-apollo": "^2.0.1",
    "react-dom": "^16.9.0",
    "react-ga": "^2.5.4",
    "react-helmet": "^5.2.0",
    "react-jss": "^8.2.0",
    "react-progress-button": "^5.1.0",
    "react-redux": "^5.0.6",
    "react-router": "^4.2.0",
    "react-router-config": "^1.0.0-beta.4",
    "react-router-dom": "^4.2.2",
    "recompose": "^0.26.0",
    "redux": "^3.7.2",
    "redux-delta": "^0.1.2",
    "redux-thunk": "^2.3.0",
    "throng": "^4.0.0"
  },
  "devDependencies": {
    "node-env-run": "^3.0.2",
    "react-scripts": "1.0.16"
  },
  "scripts": {
    "auth": "$(aws ecr get-login --no-include-email --region us-east-1)",
    "dev": "nodemon exec \"yarn build && yarn serve\"",
    "start": "react-scripts start",
    "start:server": "node server/index.js",
    "build": "react-scripts build",
    "test": "react-scripts test --env=jsdom",
    "eject": "react-scripts eject",
    "serve": "REACT_APP_GRAPHQL=http://localhost:3000/graphql NODE_ENV=development nodemon server/index.js",
    "deploy:s3": "npm run deploy:static && npm run deploy:index",
    "deploy:s3:static": "aws s3 sync build/ s3://hodlstream.com --exclude 'index.html'",
    "deploy:s3:index": "aws s3 cp build/index.html s3://hodlstream.com/index.html --cache-control 'public, must-revalidate, proxy-revalidate, max-age=0'",
    "conn": "ssh -i ${PEM:?\"Path to pem required\"} ec2-user@${EC2:?\"EC2 dns required\"}",
    "conn:main": "nodenv --env .env.local --exec \"npm run conn\"",
    "conn:staging": "nodenv --env ./staging/.env --exec \"npm run conn\"",
    "apply": "scp -i ${PEM:?\"Path to pem required\"} -r ${CONFIG:-./prod/.} ec2-user@${EC2:?\"EC2 dns required\"}:.",
    "apply:main": "CONFIG=./prod/. nodenv --env ./.env.local --exec \"npm run apply\"",
    "apply:staging": "nodenv --env .env.staging --exec \"npm run apply\"",
    "sup": "npm run conn -- -t \"docker-compose up -d\"",
    "sup:main": "nodenv --env .env.local --exec \"npm run sup\"",
    "sup:staging": "nodenv --env ./staging/.env --exec \"npm run sup\"",
    "deploy": "scp -i ${PEM:?\"Path to pem required\"} -r ./src  -r ./server ./package.json ./Dockerfile ./docker-compose.yml ./staging/.env ec2-user@${EC2:?\"EC2 dns required\"}:.",
    "deploy:main": "nodenv --env .env.local --exec \"npm run deploy\"",
    "deploy:staging": "nodenv --env ./staging/.env --exec \"npm run deploy\""
  }
}
